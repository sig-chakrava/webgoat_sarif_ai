{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json","runs":[{"tool":{"driver":{"name":"Polaris","organization":"Black Duck","rules":[{"id":"no_effect|javascript","shortDescription":{"text":"Unreachable, Unused or Dead Code"},"fullDescription":{"text":"An expression is useless because it has no side effects and its result is ignored."},"help":{"markdown":"\n## Description\nAn expression is useless because it has no side effects and its result is ignored.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nPerhaps the code was intended to affect the behavior of the program, but it does not.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## AI Insights\n\n### Summary\nThe security issue involves a redundant expression with no side effects, and its outcome is ignored, indicating CWE-398 inefficiency.\n\n### Code Analysis\n- **Purpose**: Validate if the environment's `splice` function executes correctly without bugs.\n- **Operational Flow**:\n  - Uses `splice` to modify an array and checks the resultant array length.\n  - Compares before and after lengths to assess the splice implementation.\n- **Significance**:\n  - Ensures compatibility with IE 6/7 where `splice` might behave unexpectedly.\n  - Helps developers maintain code stability across different environments.\n- **Key Functionalities**:\n  - Arrays manipulation using `splice`.\n  - Length verification for validation.\n- **Actionable Insights**:\n  - Developers can use this logic to check `splice` reliability in older browsers.\n\n### Suggested Fix\n``````\n320         array.splice.apply(array, makeArray(26));\n321 \n322         lengthBefore = array.length; //46\n323         array.splice(5, 0, \"XXX\"); // add one element\n327         return lengthBefore + 1 == array.length; // has right splice implementation without bugs\n328 \n329     }()) {//IE 6/7\n``````## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n","text":"An expression is useless because it has no side effects and its result is ignored."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-398"]},"defaultConfiguration":{"level":"warning"}},{"id":"missing_break:logic_error|javascript","shortDescription":{"text":"Omitted Break Statement in Switch"},"fullDescription":{"text":"Missing break statement between cases in switch statement"},"help":{"markdown":"\n## Description\nMissing break statement between cases in switch statement\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nExecution falls through to the next case statement or default; this might indicate a common typo.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documented this within the switch statement, and ensure that you have examined all the logical possibilities.\n  2. The functionality of omitting a break statement could be clarified with an if statement. This method is much safer.\n\n## AI Insights\n\n### Summary\nThe absence of a break statement in the switch case results in unintended code execution, leading to potential logical flaws in the program. This issue is categorized under CWE-484.\n\n### Code Analysis\n- **Purpose**: Adds actions and callbacks to behaviors within Ace.js.\n- **Flow**:\n  - Initializes `$behaviours` object if undefined.\n  - Checks if a behavior name exists; initializes if needed.\n  - Assigns a callback to a specified action under a behavior name.\n- **Key Functionalities**:\n  - Dynamic behavior management using name-action-callback paradigm.\n- **Significance for Developers**:\n  - Facilitates extension of editor functionalities.\n  - Ensures organized handling of actions.\n- **Insights**:\n  - Easy addition of new actions and callbacks.\n  - Simplifies extending Ace's capabilities efficiently.\n\n### Suggested Fix\n```(function () {\n\n    this.add = function (name, action, callback) {\n        switch (undefined) {\n          case this.$behaviours:\n              this.$behaviours = {};\n              break;\n          case this.$behaviours[name]:\n              this.$behaviours[name] = {};\n              break;\n        }\n        this.$behaviours[name][action] = callback;```## References\n* Common Weakness Enumeration: [CWE-484](https://cwe.mitre.org/data/definitions/484.html)\n","text":"Missing break statement between cases in switch statement"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-484"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.hardcoded_secret:file|text","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## AI Insights\n\n### Summary\n\n\n### Code Analysis\n\n\n### Suggested Fix\n``````## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n","text":"A secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.hardcoded_secret:pattern_low|text","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## AI Insights\n\n### Summary\n\n\n### Code Analysis\n\n\n### Suggested Fix\n``````## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","shortDescription":{"text":"Generation of Error Message Containing Sensitive Information"},"fullDescription":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"help":{"markdown":"\n## Description\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too detailed (which may reveal more than intended). The messages should not reveal the methods that were used to determine the error. Attackers can use detailed information to refine or optimize their original attack, thereby increasing their chances of success.\n\nIf errors must be captured in some detail, record them in log messages, but consider what could occur if the log messages can be viewed by attackers. Highly sensitive information such as passwords should never be saved to log files.\n\nAvoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a user account exists or not.\n\n  2. Handle exceptions internally and do not display errors containing potentially sensitive information to a user.\n  3. Use naming conventions and strong types to make it easier to spot when sensitive data is being used. When creating structures, objects, or other complex entities, separate the sensitive and non-sensitive data as much as possible.\n  4. Debugging information should not make its way into a production release.\n  5. Debugging information should not make its way into a production release.\n  6. Where available, configure the environment to use less verbose error messages. For example, in PHP, disable the display_errors setting during configuration, or at runtime using the error_reporting() function.\n  7. Create default error pages or messages that do not leak any information.\n\n## AI Insights\n\n### Summary\nThe Spring Boot server displays stack traces on error pages, potentially exposing sensitive information. Disable this feature to adhere to CWE-209 guidelines.\n\n### Code Analysis\n- Configures WebWolf application settings within a properties file for a Spring Boot application.\n- **Error Handling**: Stack traces for server errors are always included, aiding in debugging.\n- **Error Path**: Defines the server error page as \"/error.html\".\n- **Context Path**: Sets the servlet's context dynamically via `${webwolf.context}`.\n- **Port & Host**: Server's port and host are configurable through `${webwolf.port}` and `${webwolf.host}`.\n- **Application Name**: The app is named \"WebWolf\", ensuring consistent identification across services.\n- Enhances customization and adaptation to different environments by using placeholders.\n- Crucial for developers aiming to control server behavior and deployment specifics efficiently.\n\n### Suggested Fix\n```File: src/main/resources/application-webwolf.properties\nCode:\n1 server.error.include-stacktrace=never\n2 server.error.path=/error.html\n3 server.servlet.context-path=${webwolf.context}\n4 server.port=${webwolf.port}\n5 server.address=${webwolf.host}\n6 spring.application.name=WebWolf```## References\n* Common Weakness Enumeration: [CWE-209](https://cwe.mitre.org/data/definitions/209.html)\n","text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-209"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.missing_tls:common_properties|text","shortDescription":{"text":"Cleartext Transmission of Sensitive Information"},"fullDescription":{"text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"help":{"markdown":"\n## Description\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Encrypt the data with a reliable encryption scheme before transmitting.\n  2. When using web applications with SSL, use SSL for the entire session from login to logout, not just for the initial login page.\n  3. Use tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business rules.\n  4. Configure servers to use encrypted channels for communication, which may include SSL or other secure protocols.\n\n## AI Insights\n\n### Summary\nThe application uses a URI with unencrypted protocols (`ftp`, `http`, `redis`, `ws`), risking sensitive data exposure. Use secure communication to prevent data interception and tampering (CWE-319).\n\n### Code Analysis\n- **Configuration Purpose:** Sets properties for the WebGoat application, determining file storage, versioning, database, language, and URL paths.\n- **Dynamic Versioning:** Utilizes `${webgoat.build.version}` and `@project.version@` for version-specific directories and paths.\n- **Database Configuration:** Defines in-memory HSQLDB connection for user management.\n- **Language Defaults:** Establishes English as the default language.\n- **Server Configuration:** Constructs server and WebWolf URLs using host, port, and context properties.\n- **Actionable Insight:** Ensure correct version substitution and address path configurations to maintain environment consistency and application functionality.\n- **Significance:** Facilitates quick setup and maintenance, aiding developers in efficient local deployment.\n\n### Suggested Fix\n```File: src/main/resources/application-webgoat.properties\nCode:\n36 webgoat.server.directory=${user.home}/.webgoat-${webgoat.build.version}/\n37 webgoat.user.directory=${user.home}/.webgoat-${webgoat.build.version}/\n38 webgoat.build.version=@project.version@\n39 webgoat.database.connection.string=jdbc:hsqldb:mem:{USER}\n40 webgoat.default.language=en\n41 webgoat.url=https://${server.address}:${server.port}${server.servlet.context-path}\n42 \n43 webwolf.host=127.0.0.1\n44 webwolf.port=9090\n45 webwolf.context=/WebWolf\n46 webwolf.url=https://${webwolf.host}:${webwolf.port}${webwolf.context}```## References\n* Common Weakness Enumeration: [CWE-319](https://cwe.mitre.org/data/definitions/319.html)\n","text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-319"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.insufficient_asymmetric_key_size:core_java|java","shortDescription":{"text":"Inadequate Encryption Strength"},"fullDescription":{"text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"help":{"markdown":"\n## Description\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Use an encryption scheme that is currently considered to be strong by experts in the field.\n\n## AI Insights\n\n### Summary\nThe application's use of a weak asymmetric algorithm with insufficient key length exposes ciphertext data to brute force attacks, corresponding to CWE-326.\n\n### Code Analysis\n- **Purpose**: Generates RSA key pairs for cryptographic applications.\n- **Key Steps**:\n  - Utilizes `KeyPairGenerator` for RSA key generation.\n  - Defines parameters using `RSAKeyGenParameterSpec` with a 2048-bit key length and a random Fermat prime exponent.\n  - Initializes the generator with defined specifications.\n  - Returns the generated `KeyPair`.\n- **Significance**:\n  - Ensures robust security by utilizing strong keys.\n  - Offers randomness via Fermat primes for varied encryption strength.\n- **Actionable Insights**:\n  - Developers should understand cryptographic standards.\n  - Customize parameters for specific encryption needs.\n\n### Suggested Fix\n```File: src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java\nCode:\n37   public static KeyPair generateKeyPair()\n38       throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n39     KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(\"RSA\");\n40     RSAKeyGenParameterSpec kpgSpec =\n41         new RSAKeyGenParameterSpec(\n42             4096, RSAKeyGenParameterSpec.F4); // Use a strong, standard public exponent\n43     keyPairGenerator.initialize(kpgSpec);\n44     // keyPairGenerator.initialize(4096);\n45     return keyPairGenerator.generateKeyPair();\n46   }```## References\n* Common Weakness Enumeration: [CWE-326](https://cwe.mitre.org/data/definitions/326.html)\n","text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-326"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.sqli:core_java|java","shortDescription":{"text":"SQL Injection"},"fullDescription":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"help":{"markdown":"\n## Description\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nRewrite all SQL queries constructed through dynamic concatenation to use an injection-safe query mechanism such as prepared statements with parameterized queries.\n\nMost modern programming languages provide a feature called \"parameterized queries\" that allow user-supplied data to be inserted safely as values in dynamic SQL queries. Rather than construct the dynamic SQL query by concatenating user-supplied data to static SQL query string fragments, data values are identified in the query by parameter markers or variables. Dynamic data is then passed through a mechanism provided by SQL that prevents the supplied data from changing the meaning of the query.\n\nNote: the exact syntax and use of prepared statements with parameterized queries vary from language to language.\n\n## AI Insights\n\n### Summary\nThe software vulnerability CWE-89 arises from SQL commands being constructed with unchecked external inputs, potentially altering intended operations due to improper neutralization of special elements.\n\n### Code Analysis\n- The code handles POST requests for the \"/SqlInjection/attack9\" endpoint.\n- It captures 'name' and 'auth_tan' parameters for SQL query injection.\n- Constructs a SQL statement using the user-supplied 'name', highlighting a SQL injection vector.\n- Initiates a database transaction and executes the query using a scroll-sensitive statement.\n- Logs query execution to facilitate tracing and debugging.\n- Checks post-transaction employee salary metrics for anomalies.\n- Highlights potential vulnerabilities and importance of input sanitization.\n- Developers should prioritize secure coding practices such as parameterized queries to mitigate risks.\n\n### Suggested Fix\n```File: src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java\nCode:\n42   @PostMapping(\"/SqlInjection/attack9\")\n43   @ResponseBody\n44   public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n45     return injectableQueryIntegrity(name, auth_tan);\n46   }\n50     String queryInjection =\n51         \"SELECT * FROM employees WHERE last_name = ?\";\n60       // begin transaction\n61       connection.setAutoCommit(false);\n62       // do injectable query\n63       PreparedStatement preparedStatement = connection.prepareStatement(queryInjection, TYPE_SCROLL_SENSITIVE, CONCUR_UPDATABLE);\n64       preparedStatement.setString(1, name);\n65       SqlInjectionLesson8.log(connection, queryInjection);\n66       ResultSet resultSet = preparedStatement.executeQuery();\n67       // check new sum of salaries other employees and new salaries of John\n68       int newJohnSalary = this.getJohnSalary(connection);\n69       int newSumSalariesOfOtherEmployees = this.getSumSalariesOfOtherEmployees(connection);\n70       if (newJohnSalary > oldMaxSalary\n71           && newSumSalariesOfOtherEmployees == oldSumSalariesOfOtherEmployees) {```## References\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html)\n","text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-89"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.jwt_ignored_expiration_time:jose4j|java","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."},"help":{"markdown":"\n## Description\nThe instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## AI Insights\n\n### Summary\nThe `JwtConsumerBuilder` defaults to ignoring token expiration, risking indefinite validity unless `setRequireExpirationTime()` is set, which increases vulnerability to attacks. CWE-613 highlights the importance of ensuring token expiration to prevent exploitation.\n\n### Code Analysis\n- **Purpose**: Validates JWT signature using a provided secret key.\n- **Operational Flow**: \n  - Checks if the secret key is non-empty.\n  - Initializes `JwtConsumer` with:\n    - Skip all validators.\n    - Set verification key using secret key.\n    - Relax key validation.\n  - Attempts to validate the JWT.\n- **Significance**: \n  - Ensures JWT integrity using HMAC.\n  - Alerts developers about flexible key verification.\n  - Enhances understanding of JWT signature validation.\n- **Capabilities**: \n  - Handles JWT without payload validation.\n  - Simplifies implementation with relaxed criteria.\n\n### Suggested Fix\n``````java\nFile: src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java\nCode:\n123   }\n124 \n125   private static boolean validateSignature(String secretKey, String jwt) {\n126     if (hasText(secretKey)) {\n127       JwtConsumer jwtConsumer =\n128           new JwtConsumerBuilder()\n129               .setRequireExpirationTime()\n130               .setVerificationKey(new HmacKey(secretKey.getBytes(UTF_8)))\n131               .setRelaxVerificationKeyValidation()\n132               .build();\n133       try {\n``````## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n","text":"The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.hardcoded_secret:pattern_low|javascript","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## AI Insights\n\n### Summary\n\n\n### Code Analysis\n\n\n### Suggested Fix\n``````## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"null_pointer_dereference_exception:return_value|javascript","shortDescription":{"text":"NULL Pointer Dereference"},"fullDescription":{"text":"Using the return value of a function that can return null or undefined without checking it for null or undefined."},"help":{"markdown":"\n## Description\nUsing the return value of a function that can return null or undefined without checking it for null or undefined.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the function returns a null or undefined value, this code will cause an exception such as a TypeError.\n\n\n## Remediation\nPotential mitigations include the following:\n  1. If all pointers that could have been modified are sanity-checked previous to use, nearly all NULL pointer dereferences can be prevented.\n  2. The choice could be made to use a language that is not susceptible to these issues.\n  3. Check the results of all functions that return a value and verify that the value is non-null before acting upon it.\n  4. Identify all variables and data stores that receive information from external sources, and apply input validation to make sure that they are only initialized to expected values.\n  5. Explicitly initialize all your variables and other data stores, either during declaration or just before the first usage.\n  6. Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% accuracy and coverage are not feasible.\n\n## AI Insights\n\n### Summary\nFailure to check a function's return value for null or undefined can lead to unexpected behavior, aligning with CWE-476 standards.\n\n### Code Analysis\n- **Purpose**: Manages tokens within the \"ace\" editor, primarily concerning HTML tag parsing and correction.\n- **Operational Flow**:\n  - Iterates through tokens using `stepBackward` and `stepForward`.\n  - Adjusts token indices and row, ensuring boundary checks.\n  - Identifies and highlights HTML tags by matching token types and values.\n  - Handles tags like \"tag-open\" and \"tag-name.\"\n- **Significance for Developers**:\n  - Facilitates tag parsing and syntax highlighting.\n  - Offers insights into token flow manipulation.\n  - Essential for developing advanced code editing features.\n- **Key Features**:\n  - Token navigation and manipulation.\n  - HTML tag identification and correction.\n  - Token-based rendering optimization.\n\n### Suggested Fix\n``````javascript\n6852         while (this.$tokenIndex < 0) {\n6853             this.$row -= 1;\n6854             if (this.$row < 0) {\n6855                 this.$row = 0;\n6856                 return null;\n7473             while (token && /comment/.test(token.type)) {\n7481                 token = iterator.stepBackward();\n7482                 if (!token) continue;\n9474                 do {\n9475                     token = iterator.stepBackward();\n9476                     if (!token) break;\n9833             do {\n9834                 token = iterator.stepBackward();\n9835                 if (!token) break;\n13393             if (!session || !session.bgTokenizer) return;\n13394 \n13395             var pos = self.getCursorPosition();\n13399             if (!token || !/\\b(?:tag-open|tag-name)/.test(token.type)) {\n13400                 session.removeMarker(session.$tagHighlight);\n13401                 session.$tagHighlight = null;\n13405             if (token.type.indexOf(\"tag-open\") != -1) {\n13406                 token = iterator.stepForward();\n13407                 if (!token)\n13408                     return;\n13409             }\n13410 \n13411             var tag = token.value;\n13412             var depth = 0;\n13413             var prevToken = iterator.stepBackward();\n13414             if (prevToken && prevToken.value == '<'){\n13415                 do {\n13416                     prevToken = token;\n13417                     token = iterator.stepForward();\n13418                     if (!token) break;\n13419 \n13420                     if (token && token.value === tag && token.type.indexOf('tag-name') !== -1) {\n13431                     token = prevToken;\n13432                     if (!token) continue;\n13434                     if (token && token.value === tag && token.type.indexOf('tag-name') !== -1) {\n14569                     prevToken = iterator.stepBackward();\n14570                     if (!prevToken) break;\n14571                     if (prevToken) {\n``````## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n","text":"Using the return value of a function that can return null or undefined without checking it for null or undefined."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.weak_password_hash:spring_security_code|java","shortDescription":{"text":"Weak Encoding for Password"},"fullDescription":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"help":{"markdown":"\n## Description\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Passwords should be encrypted with keys that are at least 128 bits in length for adequate security.\n\n## AI Insights\n\n### Summary\nSpring Security's PasswordEncoder interface uses a weak hashing algorithm (CWE-261) that risks exposing passwords during data leaks, enabling attackers to easily retrieve original password values.\n\n### Code Analysis\n- **Purpose**: Provides basic authentication setup for the WebGoat application.\n- **Operational Flow**: Utilizes `authenticationConfiguration.getAuthenticationManager()` for managing authentication.\n- **Key Functionality**: Implements `NoOpPasswordEncoder` for password encoding, indicating passwords are stored in plain text, useful for developmental simplicity but insecure for production.\n- **Significance**: Simplifies authentication management, serving as a teaching tool to understand configurations before employing secure practices.\n- **Actionable Insight**: Developers must replace `NoOpPasswordEncoder` with a secure encoder like BCrypt for production; this encourages awareness about security implications.\n- **Capability Analysis**: Demonstrates configuration setup but highlights the critical need for secure password handling in real applications.\n\n### Suggested Fix\n``````java\nFile: src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java\nCode:\n81     return authenticationConfiguration.getAuthenticationManager();\n82   }\n83 \n84   @Bean\n85   public PasswordEncoder passwordEncoder() {\n86     return new BCryptPasswordEncoder();\n87   }\n88 }\n``````## References\n* Common Weakness Enumeration: [CWE-261](https://cwe.mitre.org/data/definitions/261.html)\n","text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-261"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.hardcoded_secret:pattern_low|java","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## AI Insights\n\n### Summary\n\n\n### Code Analysis\n\n\n### Suggested Fix\n``````## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","shortDescription":{"text":"Insufficient Verification of Data Authenticity"},"fullDescription":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"help":{"markdown":"\n## Description\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## AI Insights\n\n### Summary\nThe application uses `JwtParser` methods to parse JWTs without signature verification, enabling attackers to forge token claims and impersonate users. This issue relates to CWE-345.\n\n### Code Analysis\n- Retrieves JWT from cookie named \"access_token\".\n- Checks if the token is empty; returns UNAUTHORIZED if true.\n- Parses JWT using a secret key \"JWT_PASSWORD\".\n- Extracts user claims from the token body.\n- Checks if the user is in the valid user list; returns UNAUTHORIZED if not.\n- Ensures secure authentication and authorization in web applications.\n- Highlights importance of JWT integrity verification.\n- Provides practical insights into JWT parsing and validation.\n\n\n\n\n### Suggested Fix\n```File: src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java\nCode:\n159       @CookieValue(value = \"access_token\", required = false) String accessToken) {\n160     if (StringUtils.isEmpty(accessToken)) {\n161       return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();\n162     } else {\n163       try {\n164         Claims claims = Jwts.parser().setSigningKey(JWT_PASSWORD).parseClaimsJws(accessToken).getBody();\n165         String user = (String) claims.get(\"user\");\n166         if (!validUsers.contains(user)) {\n167           return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();\n168         } else {```## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n","text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.excessive_session_lifetime:spring_boot_properties|text","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"help":{"markdown":"\n## Description\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## AI Insights\n\n### Summary\nExcessively long session timeout increases risk of session hijacking as attackers have more time to exploit active sessions. Address CWE-613 by reducing timeout duration.\n\n### Code Analysis\n- Configures WebWolf application settings with default port 9090 and context path /WebWolf.\n- Disables management server by setting port to -1.\n- Sets session cookie name to WEBWOLFSESSION and session timeout to 6000 seconds.\n- Disables Spring Flyway migrations, optimizing startup time by not managing database schema.\n- Specifies the template location, enabling dynamic rendering in /webwolf/templates.\n- Configures JDBC connection to HSQLDB with file-based URL, linking WebGoat directory.\n- Crucial for developers adjusting WebWolf settings, understanding session management, database connection, and application context for effective development and deployment.\n\n### Suggested Fix\n```File: src/main/resources/application-webwolf.properties\nCode:\n9 webwolf.port=${WEBWOLF_PORT:9090}\n10 webwolf.context=${WEBWOLF_CONTEXT:/WebWolf}\n11 \n12 management.server.port=-1\n13 server.servlet.session.cookie.name=WEBWOLFSESSION\n14 server.servlet.session.timeout=1800\n15 spring.flyway.enabled=false\n16 spring.thymeleaf.prefix=classpath:/webwolf/templates/\n17 \n18 \n19 spring.datasource.url=jdbc:hsqldb:file:${webgoat.server.directory}/webgoat```## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n","text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.unrestricted_postmessage_target:javascript_window|javascript","shortDescription":{"text":"Exposure of Resource to Wrong Sphere"},"fullDescription":{"text":"The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."},"help":{"markdown":"\n## Description\nThe application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DExposure%20of%20Resource%20to%20Wrong%20Sphere%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## AI Insights\n\n### Summary\nThe application uses `postMessage` with `targetOrigin` set to `\"*\"`, allowing malicious sites to intercept messages by altering target window locations, highlighting CWE-668 vulnerability.\n\n### Code Analysis\n- Purpose: Facilitates inter-window communication using message events.\n- Operational Flow:\n  - Registers a listener for \"message\" events using `exports.addListener`.\n  - Sends a message using `win.postMessage`.\n  - Executes a callback upon successful message receipt.\n- Significance: Offers a robust mechanism for communication across different browser contexts.\n- Key Functionalities:\n  - Asynchronous messaging facilitating responsive UI updates.\n  - Non-blocking callback execution.\n- Exceptional Features:\n  - Simple integration with existing messaging systems.\n- Actionable Insights:\n  - Developers can implement seamless cross-origin data exchange.\n  - Enables responsive inter-component connectivity harnessing \"message\" event listeners.\n\n### Suggested Fix\n``````\nFile: src/main/resources/webgoat/static/js/libs/ace.js\nCode:\n1735                 callback();\n1736             }\n1737         };\n1738 \n1739         exports.addListener(win, \"message\", listener);\n1740         win.postMessage(messageName, \"<SPECIFIC_TARGET_ORIGIN>\");\n1741     };\n1742 }\n1743 \n1744 exports.$idleBlocked = false;\n1745 exports.onIdle = function(cb, timeout) {\n``````## References\n* Common Weakness Enumeration: [CWE-668](https://cwe.mitre.org/data/definitions/668.html)\n","text":"The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-668"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.url_manipulation:core_java|java","shortDescription":{"text":"Improper Control of Resource Identifiers ('Resource Injection')"},"fullDescription":{"text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"help":{"markdown":"\n## Description\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Resource%20Identifiers%20%28%27Resource%20Injection%27%29%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or transform it into something that does.\n\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n\nDo not rely exclusively on looking for malicious or malformed inputs. This is likely to miss at least one undesirable input, especially if the code's environment changes. This can give attackers enough room to bypass the intended validation. However, it can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright.\n\n## AI Insights\n\n### Summary\nUser-controlled URLs can lead to local file access and phishing attacks by altering the URL scheme or redirecting to malicious sites.\n\n### Code Analysis\n- **Purpose:** Manages retrieval of cat picture files based on request parameters.\n- **Flow:**\n  - Retrieves `id` parameter from request.\n  - Constructs file path using default/random id if `id` is missing.\n  - Checks for a specific file (`path-traversal-secret.jpg`).\n- **Key Functionality:**\n  - Serves image by byte array if specific file is accessed.\n  - Returns Base64-encoded image content with redirect URI.\n  - Handles missing files with a 404 response.\n- **Significance:**\n  - Essential for secure file retrieval.\n  - Random ID fallback enhances robustness.\n- **Insight:** Understand file path creation and security implications, especially when handling parameters prone to injection.\n\n\n### Suggested Fix\n``````\n99       var id = request.getParameter(\"id\");\n100       var validIds = List.of(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\");\n101       var safeId = (id != null && validIds.contains(id)) ? id : String.valueOf(RandomUtils.nextInt(1, 11));\n102       var catPicture = new File(catPicturesDirectory, safeId + \".jpg\");\n\n103       if (catPicture.getName().toLowerCase().contains(\"path-traversal-secret.jpg\")) {\n104         return ResponseEntity.ok()\n105             .contentType(MediaType.parseMediaType(MediaType.IMAGE_JPEG_VALUE))\n106             .body(FileCopyUtils.copyToByteArray(catPicture));\n107       }\n108       if (catPicture.exists()) {\n109         return ResponseEntity.ok()\n110             .contentType(MediaType.parseMediaType(MediaType.IMAGE_JPEG_VALUE))\n111             .location(new URI(\"/PathTraversal/random-picture?id=\" + catPicture.getName()))\n112             .body(Base64.getEncoder().encode(FileCopyUtils.copyToByteArray(catPicture)));\n113       }\n114       return ResponseEntity.status(HttpStatus.NOT_FOUND)\n``````## References\n* Common Weakness Enumeration: [CWE-99](https://cwe.mitre.org/data/definitions/99.html)\n","text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-99"]},"defaultConfiguration":{"level":"warning"}},{"id":"deadcode:logical_contradiction|javascript","shortDescription":{"text":"Unreachable, Unused or Dead Code"},"fullDescription":{"text":"Code can never be reached because of a logical contradiction"},"help":{"markdown":"\n## Description\nCode can never be reached because of a logical contradiction\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe indicated dead code may have performed some action; that action will never occur.\n\n\n## Remediation\nUnreachable and dead code should be analyzed and either removed or corrected depending on whether it is needed. If the code should execute but doesn't, any bugs preventing the code from executing must be fixed. If the code is not needed, and its removal will not have a negative impact on the application, it should be removed.\n\n## AI Insights\n\n### Summary\nThis issue involves unreachable code due to a logical contradiction, identified as CWE-561, leading to ineffective execution paths in the program.\n\n### Code Analysis\n- **Purpose:** Validates Document and Element capabilities to ensure essential methods and properties are present.\n- **Key Functionalities:**\n  - Checks for `getElementsByTagName` in `document`.\n  - Validates the existence of `insertBefore`, `appendChild`, `cloneNode` methods.\n  - Verifies `previousSibling`, `nextSibling`, `childNodes`, `parentNode` properties.\n- **Operational Flow:** \n  - Creates a `div` element.\n  - Uses `util` functions to confirm host method and object presence.\n- **Significance:** \n  - Fundamental for ensuring cross-browser compatibility.\n  - Prevents execution in environments lacking critical DOM capabilities.\n- **Insights:** \n  - Developers can confirm browser support before utilizing advanced DOM manipulations.\n\n### Suggested Fix\n``````javascript\n339     if (!util.isHostMethod(document, \"getElementsByTagName\")) {\n340         module.fail(\"document missing getElementsByTagName method\");\n341     }\n342 \n343     var el = document.createElement(\"div\");\n344     if (!util.areHostMethods(el, [\"insertBefore\", \"appendChild\", \"cloneNode\"]) ||\n345             !util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])) {\n346         module.fail(\"Incomplete Element implementation\");\n347     }\n348 \n349     // innerHTML is required for Range's createContextualFragment method\n``````## References\n* Common Weakness Enumeration: [CWE-561](https://cwe.mitre.org/data/definitions/561.html)\n","text":"Code can never be reached because of a logical contradiction"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-561"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"help":{"markdown":"\n## Description\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## AI Insights\n\n### Summary\nJwtBuilder issue: Tokens lack expiration, making them valid indefinitely, increasing window for attackers to brute-force or exploit them. CWE-613.\n\n### Code Analysis\n- **Purpose**: The method generates new JWT tokens for a specified user.\n- **Functionality**:\n  - Creates claims with \"admin\" set to \"false\" and user info.\n  - Builds JWT using `Jwts.builder()`, sets issue date 10 days ahead.\n  - Uses HS512 algorithm for signing with `JWT_PASSWORD`.\n- **Significance**:\n  - Offers token creation logic in Java for authentication systems.\n  - Ensures secure signing method and claim structure.\n- **Insights**:\n  - Review security implications of hardcoded values.\n  - Customize claims and signing as per project needs.\n  - Ensure `JWT_PASSWORD` integrity for security.\n\n### Suggested Fix\n```65   }\n66 \n67   private Map<String, Object> createNewTokens(String user) {\n68     Map<String, Object> claims = Map.of(\"admin\", \"false\", \"user\", user);\n69     String token =\n70         Jwts.builder()\n71             .setIssuedAt(new Date(System.currentTimeMillis()))\n72             .setExpiration(new Date(System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(30)))\n73             .setClaims(claims)\n74             .signWith(io.jsonwebtoken.SignatureAlgorithm.HS512, JWT_PASSWORD)\n75             .compact();\n76     Map<String, Object> tokenJson = new HashMap<>();```## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n","text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.hardcoded_secret:pattern_low|html","shortDescription":{"text":"Use of Hard-coded Credentials"},"fullDescription":{"text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"help":{"markdown":"\n## Description\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. For outbound authentication: store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on the same system. Properly protect the key (CWE-320). If you cannot use encryption to protect the file, then make sure that the permissions are as restrictive as possible [REF-7].\n\nIn Windows environments, the Encrypted File System (EFS) may provide some protection.\n\n  2. For inbound authentication: Rather than hard-code a default username and password, key, or other authentication credentials for first time logins, utilize a \"first login\" mode that requires the user to enter a unique strong password or key.\n  3. If the software must contain hard-coded credentials or they cannot be removed, perform access control checks and limit which entities can access the feature that requires the hard-coded credentials. For example, a feature might only be enabled through the system console instead of through a network connection.\n  4. For inbound authentication using passwords: apply strong one-way hashes to passwords and store those hashes in a configuration file or database with appropriate access control. That way, theft of the file/database still requires the attacker to try to crack the password. When handling an incoming password during authentication, take the hash of the password and compare it to the saved hash.\n\nUse randomly assigned salts for each separate hash that is generated. This increases the amount of computation that an attacker needs to conduct a brute-force attack, possibly limiting the effectiveness of the rainbow table method.\n\n  5. For front-end to back-end connections: Three solutions are possible, although none are complete.\n\n    * The first suggestion involves the use of generated passwords or keys that are changed automatically and must be entered at given time intervals by a system administrator. These passwords will be held in memory and only be valid for the time intervals.\n    * Next, the passwords or keys should be limited at the back end to only performing actions valid for the front end, as opposed to having full access.\n    * Finally, the messages sent should be tagged and checksummed with time sensitive values so as to prevent replay-style attacks.\n\n## AI Insights\n\n### Summary\n\n\n### Code Analysis\n\n\n### Suggested Fix\n``````## References\n* Common Weakness Enumeration: [CWE-798](https://cwe.mitre.org/data/definitions/798.html)\n","text":"A secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-798"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.unsafe_eval:core_javascript|javascript","shortDescription":{"text":"Use of Potentially Dangerous Function"},"fullDescription":{"text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."},"help":{"markdown":"\n## Description\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the \"banned.h\" include file from Microsoft's SDL. [REF-554] [REF-7]\n\n## AI Insights\n\n### Summary\nThe application employs an unsafe evaluation method, risking remote code execution or code injection if exposed to malicious code, aligning with CWE-676.\n\n### Code Analysis\n- **Purpose**: The snippet aids in processing and parsing server responses in web applications.\n- **Key Functionality**:  \n  - Line 801 checks for XML parsing errors by inspecting the 'parsererror' node.\n  - Line 803-805 defines JSON parsing, using `eval` as a fallback.\n- **Operational Flow**:  \n  - XML validation ensures reliable document retrieval.\n  - JSON parsing utilizes jQuery or `eval` for data conversion.\n- **Significance**:  \n  - Enables handling of AJAX responses efficiently.\n  - Provides compatibility with older jQuery versions.\n- **Actionable Insights**:  \n  - Developers should be cautious of using `eval` due to security risks.\n  - Ensure modern practices replace deprecated methods for improved safety.\n\n### Suggested Fix\n```            }\n            return (doc && doc.documentElement && doc.documentElement.nodeName != 'parsererror') ? doc : null;\n        };\n        var parseJSON = $.parseJSON || function(s) {\n            try {\n                return JSON.parse(s);\n            } catch (e) {\n                console.error(\"JSON parsing error:\", e);\n                return null;\n            }\n        };\n\n        var httpData = function( xhr, type, s ) { // mostly lifted from jq1.4.4\n\n            var ct = xhr.getResponseHeader('content-type') || '',```## References\n* Common Weakness Enumeration: [CWE-676](https://cwe.mitre.org/data/definitions/676.html)\n","text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-676"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.xml_external_entity_enabled:input_factory|java","shortDescription":{"text":"XML External Entity (XXE) Injection"},"fullDescription":{"text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"help":{"markdown":"\n## Description\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nDisable the use of DTDs in XML parsers where the document source crosses a trust boundary. Very few applications have a business requirement to accept DTDs in XML documents supplied by end-users or external systems.\n\nIf DTD support can't be disabled completely due to business requirements, configure your XML parser to disable resolution of external entities. In addition, set an XML entity expansion limit to prevent a denial of service attack from exponential entity expansions.\n\n## AI Insights\n\n### Summary\nThe app uses `javax.xml.stream.XMLInputFactory` without disabling XML external entities, risking SSRF, DoS, and data exposure. Use CWE-611 to configure security settings properly.\n\n### Code Analysis\n- **Purpose**: Parse XML to a `Comment` object with optional security settings.\n- **Flow**: Utilizes `JAXBContext` for XML binding and `XMLInputFactory` for secure processing.\n- **Key Functionalities**:\n  - Convert XML string to `Comment` object.\n  - Enable or disable security features via `securityEnabled` flag.\n- **Exceptional Features**:\n  - Security measures in place: Restricts external DTD and Schema access.\n- **Actionable Insights**:\n  - Ensure `securityEnabled` is true for secure XML parsing.\n  - Understand JAXB and XMLInputFactory properties for handling XML safely.\n- **Significance**: Critical for developers to prevent XXE vulnerabilities in XML processing.\n\n### Suggested Fix\n``````java\n68   protected Comment parseXml(String xml, boolean securityEnabled)\n69       throws XMLStreamException, JAXBException {\n70     var jc = JAXBContext.newInstance(Comment.class);\n71     var xif = XMLInputFactory.newInstance();\n72     xif.setProperty(XMLInputFactory.SUPPORT_DTD, false); // Disable DTDs completely\n73 \n74     if (securityEnabled) {\n75       xif.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\"); // Compliant\n76       xif.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\"); // compliant\n``````## References\n* Common Weakness Enumeration: [CWE-611](https://cwe.mitre.org/data/definitions/611.html)\n","text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-611"]},"defaultConfiguration":{"level":"warning"}},{"id":"sigma.jwt_ignored_start_time:jose4j|java","shortDescription":{"text":"Insufficient Session Expiration"},"fullDescription":{"text":"The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."},"help":{"markdown":"\n## Description\nThe instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nPotential mitigations include the following:\n  1. Set sessions/credentials expiration date.\n\n## AI Insights\n\n### Summary\nThe `JwtConsumerBuilder` ignores the JWT's `nbd` field by default, requiring `setRequireNotBefore()` for validation. Ignoring `nbd` risks premature token validity, allowing potential unauthorized access.\n\n### Code Analysis\n- **Purpose:** Validates JWT signature using the specified secret key.\n- **Functionality:**\n  - Checks if `secretKey` has text.\n  - Constructs a `JwtConsumer` object.\n  - Skips all validators for the JWT.\n  - Uses `HmacKey` with the provided `secretKey`.\n  - Relaxes verification of the key.\n- **Significance:**\n  - Essential for authentication and integrity of JWTs.\n  - Helps prevent unauthorized access.\n- **Developer Insights:**\n  - Ensure `secretKey` is a robust, non-empty text.\n  - Verify correct implementation and handling of JWTs.\n  - Beneficial for secure application development practices.\n\n### Suggested Fix\n``````java\nFile: src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java\nCode:\n123   }\n124 \n125   private static boolean validateSignature(String secretKey, String jwt) {\n126     if (hasText(secretKey)) {\n127       JwtConsumer jwtConsumer =\n128           new JwtConsumerBuilder()\n129               .setRequireNotBefore() // explicitly require verification of the not-before time\n130               .setSkipAllValidators()\n131               .setVerificationKey(new HmacKey(secretKey.getBytes(UTF_8)))\n132               .setRelaxVerificationKeyValidation()\n133               .build();\n134       try {\n``````## References\n* Common Weakness Enumeration: [CWE-613](https://cwe.mitre.org/data/definitions/613.html)\n","text":"The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-613"]},"defaultConfiguration":{"level":"note"}},{"id":"xss:dom_xss|javascript","shortDescription":{"text":"DOM-Based Cross-Site Scripting"},"fullDescription":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."},"help":{"markdown":"\n## Description\nUntrusted user-supplied data is inserted into a context that can execute JavaScript.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nA user can execute arbitrary JavaScript on a web page viewed or accessed by another user, potentially allowing session hijacking, disclosing sensitive data in the DOM, or viewing of keyboard and mouse events.\n\n\n## Remediation\nUse the correct remediation approach depending on the data context. Like traditional XSS mitigations, DOM-based XSS is mitigated using output encoding and input validation. The output encoding technique should match the context where data is inserted, such as HTML, HTML attribute, URL parameter, etc. Keep in mind that some contexts, such as the \"href\" attribute value, cannot be mitigated with output encoding alone and, therefore, require input validation. As the injection of untrusted data happens in the browser, the mitigation must be done in the client-side code.\n\nDifferent mitigation techniques apply to different JavaScript execution contexts:\n\n* HTML context. Use the correct element property, such as \"textContent\", \"innerText\" or \"outerText\", so that the inserted data is automatically output-encoded by the browser. \n* HTML attributes. When the \"setAttribute()\" function is used with untrusted data in both the name of the attribute and its value, use exact match to limit the attribute names that a user can set. These should only be safe attributes that do not execute JavaScript, such as \"align\", \"alink\", \"alt\", \"value\" and not event handlers or URI-type attributes. When untrusted data is used to set the value of the attribute, make sure that the attribute is not an event handler or a source. In addition, use input validation for the attribute's values, where appropriate (for example, for numeric values, such as \"width\", \"height\").\n* URL context. Use the exact match approach or mapping. If the application must allow users to provide any URL, at the minimum, validate the schema of the URL to avoid XSS through redirects to \"javascript:\" and \"data:\" URLs. \n* JavaScript context. Redesign the application so untrusted data is not used to dynamically create or modify JavaScript code. If a redesign is not possible, use exact match or allow-lists to validate data instead, since JavaScript encoding will not mitigate an injection into a string that is dynamically evaluated by functions like \"eval()\", \"new Function()\", \"document.write()\", or an event handler. \n\nRemember that server-side validation will not protect the application from DOM-based XSS because in DOM-based injections the payload is evaluated on the client side and not on the server side.\n\nFor example, if untrusted data passed through the URL fragment must be added to the page, use the \"innerText\" property rather than \"innerHTML\". In this case, if the data contains any HTML tags, they will be automatically encoded by the browser.\n\n```\n<p><b id='err'></b></p>\n<input type=hidden id=_csrf value=\"wS2sCg7DA0\" />\n<script>document.getElementById('err').innerText = window.location.hash.substring(1);</script>\n```\n\n## AI Insights\n\n### Summary\nThe security issue involves untrusted user data being executed as JavaScript, leading to potential cross-site scripting (CWE-79). Validate and sanitize inputs to prevent script execution.\n\n### Code Analysis\n- **Purpose**: Facilitates user follow functionality via AJAX.\n- **Operation Flow**: \n  - Executes a POST request.\n  - URL constructed with user parameter.\n  - Appends server response to DOM element with id “toast”.\n- **Significance**: \n  - Simplifies asynchronous user interactions.\n  - Enhances UI with real-time feedback.\n- **Key Functionalities**: \n  - Dynamic URL creation.\n  - Response handling with jQuery.\n- **Exceptional Features**: \n  - Efficient AJAX operation.\n- **Actionable Insights**:\n  - Ensure proper server response handling.\n  - Validate ‘user’ input before usage.\n- **Capability Analysis**:\n  - Streamlines user engagement via backend interactions.\n\n\n### Suggested Fix\n``````javascript\nfunction startFollowing(user) {\n    $.ajax({\n        type: 'POST',\n        url: 'JWT/kid/follow/' + encodeURIComponent(user)\n    }).then(function (result) {\n        $(\"#toast\").append($(\"<div>\").text(result));\n    })\n}\n``````## References\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html)\n","text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."},"properties":{"security-severity":"8.9","tags":["security","static_analysis","external/cwe/cwe-79"]},"defaultConfiguration":{"level":"error"}},{"id":"sigma.weak_hash:core_java|java","shortDescription":{"text":"Insecure Encryption Algorithm in Use"},"fullDescription":{"text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"help":{"markdown":"\n## Description\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUse a secure encryption algorithm with a key size and block length of 128 bits or greater. The Advanced Encryption Standard (AES) algorithms (AES-128, AES-192, and AES-256) are approved by NIST and is a good option.\n\n## AI Insights\n\n### Summary\nThe application uses a weak algorithm for `MessageDigest`, risking collision attacks. This aligns with CWE-327 vulnerability, requiring stronger algorithms.\n\n### Code Analysis\n- **Purpose**: Generates and stores MD5 hash for a randomly selected secret from predefined SECRETS array.\n- **Flow**: \n  - Checks for existing MD5 hash in the session.\n  - If absent, selects a random secret, computes MD5 hash, and stores both in session attributes.\n- **Key Functionalities**: \n  - Random selection of secret enhances unpredictability.\n  - MD5 hashing provides a unique identifier for each session.\n- **Significance for Developers**:\n  - Facilitates session-based uniqueness for secure identification.\n  - Illustrates MD5 hash generation and session storage.\n- **Insights**:\n  - MD5 is generally insecure for sensitive data.\n  - Encourages understanding of session management and hashing.\n\n### Suggested Fix\n```File: src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java\nCode:\n34     String sha256Hash = (String) request.getSession().getAttribute(\"sha256Hash\");\n35     if (sha256Hash == null) {\n36 \n37       String secret = SECRETS[new Random().nextInt(SECRETS.length)];\n39       MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n40       md.update(secret.getBytes());\n41       byte[] digest = md.digest();\n42       sha256Hash = DatatypeConverter.printHexBinary(digest).toUpperCase();\n43       request.getSession().setAttribute(\"sha256Hash\", sha256Hash);\n44       request.getSession().setAttribute(\"sha256Secret\", secret);```## References\n* Common Weakness Enumeration: [CWE-327](https://cwe.mitre.org/data/definitions/327.html)\n","text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-327"]},"defaultConfiguration":{"level":"note"}},{"id":"sigma.jwt_no_claims_validation:jose4j|java","shortDescription":{"text":"Insufficient Verification of Data Authenticity"},"fullDescription":{"text":"The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."},"help":{"markdown":"\n## Description\nThe application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast)\n\n\n\n## Remediation\nUnspecified remediation.\n\n## AI Insights\n\n### Summary\nThe application bypasses JSON Web Token validation using methods like `setSkipAllValidators`, allowing attackers to reuse JWTs for unauthorized scenarios, demonstrating CWE-345 vulnerability.\n\n### Code Analysis\n- **Purpose**: Validates JWT signatures using a secret key to ensure token integrity.\n- **Operational Flow**:\n  - Checks if the `secretKey` is non-empty.\n  - Constructs a `JwtConsumer` with specific configurations:\n    - Skips all validators.\n    - Sets verification key using HMAC with the secret key.\n    - Relaxes key validation.\n- **Significance**:\n  - Fundamental for securing JWTs by verifying authenticity.\n  - Prevents tampering.\n- **Insight**:\n  - Ensure proper secretKey management to maintain security.\n  - Customize `JwtConsumerBuilder` for varied validation needs.\n\n### Suggested Fix\n```File: src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java\nCode:\n123   }\n124 \n125   private static boolean validateSignature(String secretKey, String jwt) {\n126     if (hasText(secretKey)) {\n127       JwtConsumer jwtConsumer =\n128           new JwtConsumerBuilder()\n129               .setRequireExpirationTime()\n130               .setRequireIssuedAt()\n131               .setVerificationKey(new HmacKey(secretKey.getBytes(UTF_8)))\n132               .setRelaxVerificationKeyValidation()\n133               .build();\n134       try {```## References\n* Common Weakness Enumeration: [CWE-345](https://cwe.mitre.org/data/definitions/345.html)\n","text":"The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."},"properties":{"security-severity":"3.8","tags":["security","static_analysis","external/cwe/cwe-345"]},"defaultConfiguration":{"level":"note"}},{"id":"null_pointer_dereference_exception:constant|javascript","shortDescription":{"text":"Bad Use Of Null-like Value"},"fullDescription":{"text":"Performing an operation that would be invalid on a null or undefined value."},"help":{"markdown":"\n## Description\nPerforming an operation that would be invalid on a null or undefined value.\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nIf the value is null or undefined, this code will cause an exception such as a TypeError.\n\n\n## Remediation\n\n\n## AI Insights\n\n### Summary\nOperation fails due to null/undefined value (CWE-476); ensure checks to prevent invalid operations on such values.\n\n### Code Analysis\n- **Purpose**: Enhance code auto-completion functionalities using keyword extraction from tokenizer rules.\n- **Operational Flow**:\n  - Check if completionKeywords is initialized.\n  - Extract keywords from tokenizer rules if not initialized.\n  - Provide keyword list by concatenating with existing keywords, if necessary.\n- **Significance**:\n  - Facilitates improved code assistance for developers.\n  - Offers extendable and customizable keyword lists for enhanced productivity.\n- **Key Functionalities**:\n  - Keyword extraction via tokenizer rules.\n  - Seamless integration with existing keyword lists.\n- **Actionable Insights**:\n  - Developers can leverage the snippet to expand code auto-completion.\n  - Potential to customize tokenizer rules for tailored keyword extraction.\n\n### Suggested Fix\n```7607         if (!this.completionKeywords) {\n7608             var rules = this.$tokenizer.rules;\n7609             var completionKeywords = [];\n7610             for (var rule in rules) {\n7611                 var ruleItr = rules[rule];\n7626             }\n7627             this.completionKeywords = completionKeywords;\n7628         }\n7629         if (!append)\n7630             return this.$keywordList || [];\n7631         return completionKeywords.concat(this.$keywordList || []);\n7632     };\n7633 \n7634     this.$createKeywordList = function() {\n7635         if (!this.$highlightRules)\n7636             this.getTokenizer();\n7637         this.$keywordList = this.$keywordList || [];```## References\n* Common Weakness Enumeration: [CWE-476](https://cwe.mitre.org/data/definitions/476.html)\n","text":"Performing an operation that would be invalid on a null or undefined value."},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-476"]},"defaultConfiguration":{"level":"warning"}},{"id":"copy_paste_error|javascript","shortDescription":{"text":"Copy-Paste Error"},"fullDescription":{"text":"A copied piece of code is inconsistent with the original"},"help":{"markdown":"\n## Description\nA copied piece of code is inconsistent with the original\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast)\n\n## Local Effect\n\nThe copied code will not have its intended effect.\n\n\n## Remediation\n\n\n## AI Insights\n\n### Summary\nInconsistent code from a copied source poses security risks under CWE-398, jeopardizing functionality and reliability.\n\n### Code Analysis\n- **Purpose**: Handles text cursor interactions in a code editor session, particularly for text token manipulation.\n- **Operational Flow**:\n  - Identifies the character right of the cursor.\n  - Retrieves token information at and after the cursor position.\n  - Checks if the preceding char is an escape sequence.\n  - Determines if the current and next tokens are part of a string or escape sequence.\n- **Significance**:\n  - Enhances code editing accuracy by managing string and escape token recognition.\n  - Empowers developers to reliably manipulate cursor behavior in string contexts.\n- **Capabilities**:\n  - Identifies tokens influencing cursor movements.\n  - Supports string and escape token integration for robust code navigation.\n\n### Suggested Fix\n```7156                 var rightChar = line.substring(cursor.column, cursor.column + 1);\n7157 \n7158                 var token = session.getTokenAt(cursor.row, cursor.column);\n7159                 var rightToken = session.getTokenAt(cursor.row, cursor.column + 1);\n7160                 if (rightChar == \"\\\\\" && token && /escape/.test(token.type))\n7161                     return null;\n7162 \n7163                 var stringBefore = token && /string|escape/.test(token.type);\n7164                 var stringAfter = rightToken && /string|escape/.test(rightToken.type);```## References\n* Common Weakness Enumeration: [CWE-398](https://cwe.mitre.org/data/definitions/398.html)\n","text":"A copied piece of code is inconsistent with the original"},"properties":{"security-severity":"6.8","tags":["security","static_analysis","external/cwe/cwe-398"]},"defaultConfiguration":{"level":"warning"}}]}},"results":[{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/7A1C00300F0A757BAEEA157AFD60C792?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":325}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"8ace912eef7c5c7a0977bcf335d4506aba3c08d38a3eafebc1caa5072a36938c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":325}},"message":{"text":"Discarding the result of operator \"==\" in \"lengthBefore + 1 == array.length\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":325}},"message":{"text":"Did you intend to make an assertion or assignment?"}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/7CBD34ACDE7FD32CCDE967E42D2BEE72?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":15272}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"23dd29941e13028b516ea72b113d95797e617945035d8f9e4edc927e9e160865"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":15272}},"message":{"text":"Discarding the result of operator \"==\" in \"point.bias == -1\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":15272}},"message":{"text":"Did you intend to make an assertion or assignment?"}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/B5EFEB94C10E39E5B6378880985126F2?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":6785}}}],"ruleId":"missing_break:logic_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"cbc4e3b5e1a7471130394911db8e0945cb027b25c622ac2cafa3cc348a63223f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":6785}},"message":{"text":"The case for \"this.$behaviours\" is not terminated by a \"break\" statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":6787}},"message":{"text":"The above case falls through to this one."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/A1C10AECA6787A0B32F624AB66E33F82?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fgoatkeystore.pkcs12)\n\nA secret, such as a password, cryptographic key, or token is stored in a file that is persisted to the code repository. Any user with access to the code repository may obtain and use the secret to access restricted resources."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/goatkeystore.pkcs12"},"region":{"startLine":1}}}],"ruleId":"sigma.hardcoded_secret:file|text","partialFingerprints":{"ruleIdLocationHash/v1":"293f2fb8d9ec3687adf152276a79d5c829829789d3e5d98e8c341019ce2281b4"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/9B37EAD4824CF4F6663A212E41B3F455?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dpoc.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"poc.json"},"region":{"startLine":74}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|text","partialFingerprints":{"ruleIdLocationHash/v1":"b8b8e106ed02874687561f3a799df86a2619d93ba4cb1965caebcdf72a4de3f6"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D1AE9A7E0681113FE9B24FAD88D3C114?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"9254f628b0c2d396d8183ab2b0d2bcde98e592e23961a6b6bd87c67ab02c41a4"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/BA39CCDA00B525C5CE5CA93500D47796?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":41}}}],"ruleId":"sigma.missing_tls:common_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"a1b01d33e24950126be9f414b7d98fc4e313922703a32b905a599cc43a588eb8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":41}},"message":{"text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":41}},"message":{"text":"Configure the URI to use a secure protocol with TLS protections."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/A9CE3B9F23A57DE0C324405322999C48?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInadequate%20Encryption%20Strength%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FCryptoUtil.java)\n\nThe application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"},"region":{"startLine":42}}}],"ruleId":"sigma.insufficient_asymmetric_key_size:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"7cf2d9d7bf25a885e851ff3db7c103d5332345f71ad6e20c4ce57ddb56ea6056"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"},"region":{"startLine":42}},"message":{"text":"The application uses an asymmetric algorithm with insufficient key size, making the ciphertext data vulnerable to brute force attacks."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"},"region":{"startLine":42}},"message":{"text":"Modify the application to adhere to the following minimum key size requirements:\n* 3072 bit key and 283 bit modulus for Diffie-Hellman and DSA algorithms.\n* 3072 bit key for RSA algorithms.\n* 256 bit domain parameters for elliptic curve algorithms."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/DB2C945999756017FDA78E29AEE337DC?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"632918ba66b366f9e1df084a42de41812f4ee36beb2ee9348940adff999b4e53"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":44}},"message":{"text":"'auth_tan' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":45}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":50}},"message":{"text":"assigning to queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/0C744D4D6786EAA81A8366AA3FB90AE8?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}}}],"ruleId":"sigma.jwt_ignored_expiration_time:jose4j|java","partialFingerprints":{"ruleIdLocationHash/v1":"3eac54d11ca11b6662f95d322b085df0e5e4d237cfa4054044f8ac9e1fa61e39"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"The instance of `JwtConsumerBuilder` ignores the expiration time by default, unless the `setRequireExpirationTime()` function is called explicitly.\nIgnoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"Verify that the token is still valid by invoking the `setRequireExpirationTime()` function.\nInvoke the `setMaxFutureValidityInMinutes()` function if you need to tolerate a small amount of clock skew."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/3ED27D5A62DB4ADDAC46F4CBD5C8AF92?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks account"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":40}},"message":{"text":"'account' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/88889EEB8263F14E22E9B33D226F786C?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Flessons%2Fjwt%2Fjs%2Fjwt-refresh.js)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/jwt/js/jwt-refresh.js"},"region":{"startLine":10}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"e23862d32ba2185f82a2f82e7862cdb68bd978123bd13dc707f6739b260e0a26"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/CA40F03D38C1A04061F3EFCA5C465379?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13435}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"537985ed9b802012d26310662e811879f98792fa5031aad0375106289b094480"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7473}},"message":{"text":"Example 2 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7481}},"message":{"text":"Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Example 3 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9475}},"message":{"text":"Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9833}},"message":{"text":"Example 1 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9834}},"message":{"text":"Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session.bgTokenizer\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13405}},"message":{"text":"Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13407}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13415}},"message":{"text":"Accessing a property of null-like value \"prevToken\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13431}},"message":{"text":"Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Example 5 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14569}},"message":{"text":"Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14571}},"message":{"text":"Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7473}},"message":{"text":"Example 2 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7481}},"message":{"text":"Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Example 3 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9475}},"message":{"text":"Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9833}},"message":{"text":"Example 1 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9834}},"message":{"text":"Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13393}},"message":{"text":"Condition \"!session.bgTokenizer\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13399}},"message":{"text":"Condition \"!/\\b(?:tag-open|tag-name)/.test(token.type)\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13405}},"message":{"text":"Condition \"token.type.indexOf(\"tag-open\") != -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13407}},"message":{"text":"Condition \"!token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13415}},"message":{"text":"Condition \"prevToken.value == \"<\"\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13430}},"message":{"text":"Condition \"prevToken\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13430}},"message":{"text":"Condition \"depth <= 0\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13431}},"message":{"text":"Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13432}},"message":{"text":"\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13432}},"message":{"text":"Assigning \"prevToken\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Example 5 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token.value === tag\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Condition \"token.type.indexOf(\"tag-name\") !== -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13435}},"message":{"text":"Accessing a property of null-like value \"prevToken\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14569}},"message":{"text":"Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14571}},"message":{"text":"Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/EC1A63D9F8F87A4947D3BABA49FF9798?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"},"region":{"startLine":86}}}],"ruleId":"sigma.weak_password_hash:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"a90362d23f4da38ab84fed28cfd7f6b59f1bb6d82cb07fbfd40f4be03dea5eac"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"},"region":{"startLine":86}},"message":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"},"region":{"startLine":86}},"message":{"text":"Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/2B0A8EFD289718E3DA786807C6BB1CA7?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"342f20fa3cfefc2f0f4212db50575283f290006e164ad00d906a3ce54b05ea9e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/2E9C85C74AF0CA660518223B452C9DF5?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fmissingac%2FMissingFunctionAC.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"},"region":{"startLine":14}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"272abec8d03a96b1459c5455bac9e23cf9b2b07a17a47963c916a74622cf0bee"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/6C40615D00770C6FB6386B58FC2AE43E?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":11090}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"e8bfc1b6e973a073357d54d96e88bb582610cde48a6dcca86de65222f81e692a"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":11080}},"message":{"text":"Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":11080}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":11090}},"message":{"text":"Reading variable \"split\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":11090}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/ABA947A9A8357DE6B83EE3F8BD8E4163?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":164}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"48022c78290a42dccd56737d8546312aabec77faf69d192b8921ed6131d99b36"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":164}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":164}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/E08425F121E195DFC2EB87D537D1920C?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":14}}}],"ruleId":"sigma.excessive_session_lifetime:spring_boot_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"b7f5b42bda34ae75f1962ab9d2b0c0c842e038c75483bf42b8acdb68890f5c2e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":14}},"message":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webwolf.properties"},"region":{"startLine":14}},"message":{"text":"Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/205FF468B9A9C04297143B0D3BCCC58A?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DExposure%20of%20Resource%20to%20Wrong%20Sphere%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nThe application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/libs/ace.js"},"region":{"startLine":1740}}}],"ruleId":"sigma.unrestricted_postmessage_target:javascript_window|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"82834e83cfb75490cdfa7516722d007c2c283c307e86c176ec040819456acf82"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"Give an exact URI value for parameter `targetOrigin`."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"The application sends a cross-document message by calling function `postMessage` without restricting the `targetOrigin` by passing `\"*\"` as the second argument. A malicious site can intercept the message by changing the location of the target window."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/libs/ace.js"},"region":{"startLine":1740}},"message":{"text":"Give an exact URI value for parameter `targetOrigin`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/761765D9BC41FD999927EBCA71834416?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9117}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"738ec3073a59e54826a5157886b24e4d6d91798567d6dc18b1f662258fcc4904"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9117}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9117}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/04ADCF0A785A4FDF6BEA93929A522D87?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DOmitted%20Break%20Statement%20in%20Switch%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nMissing break statement between cases in switch statement"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13122}}}],"ruleId":"missing_break:logic_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"b6ca5aff29cf849c27ac1cb3a2a5d3a86b236ff11326cd8e990da0c288758cb7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13122}},"message":{"text":"The case for value \"\"center-animate\"\" is not terminated by a \"break\" statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13124}},"message":{"text":"The above case falls through to this one."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/E06BC762934956ABCC7C927CD01FA6CE?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DImproper%20Control%20of%20Resource%20Identifiers%20%28%27Resource%20Injection%27%29%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fpathtraversal%2FProfileUploadRetrieval.java)\n\nA user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":114}}}],"ruleId":"sigma.url_manipulation:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"c1e6741035c5d02ac78f0bc8f00b62aa77ab9b642be74ffc6c83fc0fd9e19ab0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":99}},"message":{"text":"request.getParameter(\"id\") is a source of tainted data"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":99}},"message":{"text":"assigning to id"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":100}},"message":{"text":"assigning to catPicture"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":101}},"message":{"text":"calling java.io.File::File"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":109}},"message":{"text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":109}},"message":{"text":"URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":111}},"message":{"text":"calling java.io.File::getName"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":111}},"message":{"text":"calling java.net.URI::URI"}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":99}},"message":{"text":"request.getParameter(\"id\") is a source of tainted data"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":99}},"message":{"text":"assigning to id"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":100}},"message":{"text":"assigning to catPicture"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":101}},"message":{"text":"calling java.io.File::File"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":114}},"message":{"text":"A user-controllable string is used to specify a URL that is used in a connection. An attacker can modify the URL scheme to access a local file. An attacker can also mount a phishing attack by modifying the URL value to point to a malicious website."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":114}},"message":{"text":"URL manipulation vulnerabilities can be addressed by proper input validation. Allow listing the allowed scheme and authority, and deny listing characters that allow unsafe path traversal in the path and query parts of the URL can improve security."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":115}},"message":{"text":"calling java.io.File::getName"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"},"region":{"startLine":115}},"message":{"text":"calling java.net.URI::URI"}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/69B7AD597723773A0BD5C77263B20A52?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"},"region":{"startLine":89}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"6620e75037dc3510ad3ab1419b5da3af053e013d08299122ef65c315458786ce"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/1517C628ED7B193A043237DAADDC46F1?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":46}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"d0677b0f80ca10911339f3809d8746de895184528ac9bbc2fca9427d707b748d"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/7C65ADCB91C5FDAEED71D64C1B012890?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":45}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"075c85ca075468020c5485f95b02cfe3357410cb83003df53504bf42bca36cff"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/F3AFB42DC833BA9958BC8ABD8880A9ED?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fplugins%2Fbootstrap-wysihtml5%2Fjs%2Fwysihtml5-0.3.0.js)\n\nCode can never be reached because of a logical contradiction"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}}}],"ruleId":"deadcode:logical_contradiction|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"7283d83862945be940e6fc176156db9979beecc429b6ec61dba53075fa0ac6f7"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":344}},"message":{"text":"The condition \"[\"insertBefore\", \"appendChild\", \"cloneNode\"]\" must be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":344}},"message":{"text":"Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(el...\"."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}},"message":{"text":"The condition \"[\"splitText\", \"deleteData\", \"insertData\", \"appendData\", \"cloneNode\"]\" must be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js"},"region":{"startLine":355}},"message":{"text":"Execution cannot reach the expression \"util.areHostObjects(el, [\"previousSibling\", \"nextSibling\", \"childNodes\", \"parentNode\"])\" inside this statement: \"if (!util.areHostMethods(te...\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/59BD6433FC409D616CB84EBC279AE76C?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webwolf.properties)\n\nThe session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":14}}}],"ruleId":"sigma.excessive_session_lifetime:spring_boot_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"bfaede96a1b21917dc0589a71786d280a9044674d44a8b3363108e014b14b953"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":14}},"message":{"text":"The session is configured with an excessively long timeout value. Session-based attacks require an active session. Therefore, the longer a session persists, the more time an attacker has to hijack the session."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webwolf.properties"},"region":{"startLine":14}},"message":{"text":"Set the session expiration time to a value greater than or equal to 0, but less than 30 minutes in order to substantially reduce the window of opportunity for session-based attacks."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/18E10C480C4EB166928AF8FFCD378437?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson9.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"632918ba66b366f9e1df084a42de41812f4ee36beb2ee9348940adff999b4e53"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":44}},"message":{"text":"'name' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":45}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":50}},"message":{"text":"assigning to queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":65}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/642611F38999D63A3D5DA2271E23628B?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FXOREncodingAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java"},"region":{"startLine":25}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"fd9bfbbdbcf630f2803d1a0f5f41ee48fa97a4ea97c808f7c6d72ba0898cd30b"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/1B9D551367ED0633125AB5DDD13897A0?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":70}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"45b9b90156b5acb4106277ecb466d0d04fb43eab5d69866f6cdf47d54b9cf97c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":70}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":70}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/AD9178FB6A734878D70AA7974EC39B20?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Flessons%2Fpathtraversal%2Fhtml%2FPathTraversal.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/pathtraversal/html/PathTraversal.html"},"region":{"startLine":257}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|html","partialFingerprints":{"ruleIdLocationHash/v1":"b06f46d137c2b6297c2144c2dd205c875d3d4087de553d10b3b15d654569651d"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/88B095DBCDDF1C2AA401140993ADF7A1?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Flessontemplate%2FSampleAttack.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"},"region":{"startLine":27}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"1e13fc100ec7ce365cffd6d953c34e4aaab9a40eb8fe7f02577cf8f1d88082cd"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D941EEEE3C83AC1D2D46FA3F7951CCEE?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionChallenge.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":57}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5eaec8a07ec5f8dd92f1b026b33acb59e539d0b08538cfbc41f0b279ba38b606"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge::registerNewUser sinks username"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":46}},"message":{"text":"'username' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":54}},"message":{"text":"assigning to checkUserQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":57}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"},"region":{"startLine":57}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/239E152A476CB2D36646ABB81D7806C9?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Fjquery_form%2Fjquery.form.js)\n\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/jquery_form/jquery.form.js"},"region":{"startLine":805}}}],"ruleId":"sigma.unsafe_eval:core_javascript|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"82b87c7a037f8a06a455bfe5a290c317d38710929e25f04275f9059ae9c4acc3"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/jquery_form/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/jquery_form/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/jquery_form/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/jquery_form/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/C6209546CADF1840B569358E87FFEE93?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks injection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":40}},"message":{"text":"'injection' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/878FA357D1DA7BE6EE3B77956CFC41AE?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dpoc.json)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"poc.json"},"region":{"startLine":10}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|text","partialFingerprints":{"ruleIdLocationHash/v1":"7ddd8568ed5751665f403cae2da6cc029b8b3b2ed20694fce7d524cc7edd8a6d"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/ABABA4E2B4F4BF679911C4A8283E5A94?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":4315}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"717ed2a807c4370c84476c079cf047129615b796f559bf42ea72eb7e6e1e86f5"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":4440}},"message":{"text":"Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":4440}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":4315}},"message":{"text":"Discarding the programmer-written value \"\"no use strict\"\". What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":4315}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/31AEEEB35B3665893AD4B2407C2C7CD7?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DWeak%20Encoding%20for%20Password%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fcontainer%2FWebSecurityConfig.java)\n\nSpring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"},"region":{"startLine":88}}}],"ruleId":"sigma.weak_password_hash:spring_security_code|java","partialFingerprints":{"ruleIdLocationHash/v1":"f7e8dc91c77f787d134f72a3cd8fa28f6d24b3482bb45e0a091d7eedb79af13f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"},"region":{"startLine":88}},"message":{"text":"Spring Security framework uses weak hashing algorithm in the PasswordEncoder interface. Weak hashing algorithm does not adequately protect the password. In case of a data leak from a password storage, attackers will easily be able to obtain the original password values."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"},"region":{"startLine":88}},"message":{"text":"Audit the use of password encoder with the weak password hashing algorithm. Instead, use a stronger password encoder in production such as `org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/E453A8B3263435D18286BC17ECEFB162?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"f83ae4f3c3f21d8c1ce6a0e283b47d5ad137db3fc2ba17c40a0bcbec393fcd01"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":43}},"message":{"text":"'auth_tan' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":44}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":49}},"message":{"text":"assigning to query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/DBDB213346279FEEE157E9142CBAE688?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":8534}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"614249a2cdf663a9ad259f226a139321670348050cd9c9f2067b3b7fd0419ce9"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":8534}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":8534}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/6B1BE535687ECCD3AF4AFE9610FE3F67?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5ba1620a65ca4016236c222a9c9266f9e61a19e328061dc81815d9416b66f30d"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::completed sinks operator"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":40}},"message":{"text":"'operator' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a::injectableQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"},"region":{"startLine":48}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/C4F2B10E3AED41F553D1600E11DD1B69?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DXML%20External%20Entity%20%28XXE%29%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fxxe%2FCommentsCache.java)\n\nThe application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"},"region":{"startLine":71}}}],"ruleId":"sigma.xml_external_entity_enabled:input_factory|java","partialFingerprints":{"ruleIdLocationHash/v1":"90eef25bdd5df21fc00d792468d7422e1e02bc2482fda60e5f7e95ed30d589c6"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"},"region":{"startLine":71}},"message":{"text":"The application parses XML using the `javax.xml.stream.XMLInputFactory` class which has not been configured to prevent expansion of external entities during XML parsing by disabling the XML external entities and DTD features. External entity expansion may cause a server-side request forgery, denial of service, exposure of sensitive data or unwanted server requests."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"},"region":{"startLine":71}},"message":{"text":"Disable external entities and DTDs by either: * setting the property `XMLInputFactory.SUPPORT_DTD` to `false`, or * by setting `XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES` to `false` and `XMLConstants.ACCESS_EXTERNAL_DTD` to an empty string."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/17CF00E4CE29293267D5622051A5AE85?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Potentially%20Dangerous%20Function%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Fjquery.form.js)\n\nThe application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/jquery.form.js"},"region":{"startLine":805}}}],"ruleId":"sigma.unsafe_eval:core_javascript|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"db0f3716f8d16215a0c6d04340a4618a2b19b4d1f8b351c0a6849621cd93c2e1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/libs/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/webgoat/static/js/libs/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"The application uses an unsafe evaluation method. If attacker-controlled code reaches this method, it may lead to remote code execution, code injection, or a cross-site scripting vulnerability."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/jquery.form.js"},"region":{"startLine":805}},"message":{"text":"Whenever possible, rewrite the application without using code evaluation functions. If the application absolutely needs to use dynamic code evaluation, send hard-coded strings, or user input after the input validation to these functions. If conditional execution is needed, map user input to hardcoded values and send them to the evaluation functions."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/C53C6CB6A7B2224BC22E932540CBA161?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"273ecafb2220bb175c5058eb73f1abd5dd56ba62854e9d3d12a8f52e5e16ef18"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/930E56CA05F692F0D9B816EFF686B0FA?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fmissingac%2FMissingFunctionAC.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java"},"region":{"startLine":15}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"5f53c161d58f5c5a7b02b2dbfd46a33411a610c5737fc40dd203971954e44706"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/A81BAF1198FCBEC4122D13255530EC24?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}}}],"ruleId":"sigma.jwt_ignored_start_time:jose4j|java","partialFingerprints":{"ruleIdLocationHash/v1":"d9c44abf930d1116ed01ccc0625df38a6772ed25e79fd8dfaf049cf194d15828"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"The instance of `JwtConsumerBuilder` ignores the not-before time by default. When the verified JWT contains the `nbd` field, the `setRequireNotBefore()` method should be invoked explicitly to verify the token's not-before time.\nIgnoring the not-before setting of a JSON web token means it may become valid before the particular point in time, and thus the attacker may use the invalid token to access resource."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"Verify that the token's start time is valid by invoking the `setRequireNotBefore()` method on the `JwtConsumerBuilder`, when the token should only be valid after some point in time.\nInvoke the `setAllowedClockSkewInSeconds()` method, if the application needs to tolerate a small amount of clock skew."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/460942D9AF489CF76A903C110703695D?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge7%2FAssignment7.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"},"region":{"startLine":36}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"f73c2977d8104ab3941d2fb2e31e8753c7e6be139d3bbc7061e3072df1c6990f"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/10EA92913D93D3BE546A3530DA6FA1FD?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"96ae268c0c57751d76598e9e7f3456bbbbdcc2c07b0d951a6085678579cd7942"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":91}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/A193CBACBCCC00C9A9075D79403BDF6F?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":48}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"ef4a7798c9a70273d8e108b57a5d7f70c87bb01970322f111d60ff39340b88b8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":32}},"message":{"text":"calling org.owasp.webgoat.lessons.challenges.challenge5.Assignment5::login sinks password_login"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":35}},"message":{"text":"'password_login' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":48}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":48}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/DAFC6100A2DCEAE19E2F14DE267D526C?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fchallenges%2Fchallenge5%2FAssignment5.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":46}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"844a7647eef6a9ec6b195f9dbf37877c9d4f8fad2bbeef428315b5fcdb3dec8f"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":32}},"message":{"text":"calling org.owasp.webgoat.lessons.challenges.challenge5.Assignment5::login sinks username_login"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":35}},"message":{"text":"'username_login' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":46}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"},"region":{"startLine":46}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/05D7EFC9ACCDF8FBEBA414E1563071A3?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Ftext.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/text.js"},"region":{"startLine":270}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"15ce2d16f252edfbf70ba48f5a75d755d084d6ac139f14b4cb6745a9eb9615a1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/text.js"},"region":{"startLine":266}},"message":{"text":"Example 1: \"text.createXhr()\" has its value checked in \"(masterConfig.env === \"xhr\") || (!masterConfig.env && text.createXhr())\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/text.js"},"region":{"startLine":269}},"message":{"text":"\"text.createXhr\" returns \"null\" or \"undefined\" (checked 1 out of 2 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/text.js"},"region":{"startLine":269}},"message":{"text":"Assigning \"xhr\" to the \"null\" or \"undefined\" return value from \"text.createXhr\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/text.js"},"region":{"startLine":270}},"message":{"text":"Accessing a property of null-like value \"xhr\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/62BF87F88346CFF29DF35B7C100BA9C0?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":44}},"message":{"text":"'auth_tan' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":45}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":50}},"message":{"text":"assigning to queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":64}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"assigning to action"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":137}},"message":{"text":"assigning to logQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/446FF0627949B7BD595957ACB688E282?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":46}}}],"ruleId":"sigma.missing_tls:common_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"1e456a4eb8e4b6802ea7eeb9417fa38f71eee42fbf4d56de61ad035a043b1d9b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":46}},"message":{"text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/application-webgoat.properties"},"region":{"startLine":46}},"message":{"text":"Configure the URI to use a secure protocol with TLS protections."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/42952D519F55E27D92BD116CBBDF1DF9?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":43}},"message":{"text":"'name' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":44}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":49}},"message":{"text":"assigning to query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":61}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"assigning to action"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":137}},"message":{"text":"assigning to logQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/5C90E29E6F67C264EC8B896D49133BF2?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":10929}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"3556aac28ac93741b702935477224f5371e88e44a111afa13cb188f5b1d1b6cf"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":10897}},"message":{"text":"Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":10897}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":10929}},"message":{"text":"Reading variable \"idx\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":10929}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D4CB3DF3549C1586F42F0BD885464E7F?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fjwt%2Fjs%2Fjwt-kid.js)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":1}}}],"ruleId":"xss:dom_xss|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"2138a6a6fdc7e0c2035bca2f665422c57193925012fe15addc6732053e3a6703"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":6}},"message":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":6}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability. HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided. JavaScript code execution: Validate any untrusted data against an allowlist so it is not possible for an attacker to have its supplied code executing. URL manipulation: Add trusted schemes to an allowlist and ensure it does not allow for the injection of a URL like: `data:text/html;,<img/src/onerror=alert(1)>`."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":6}},"message":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":6}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability. HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided. JavaScript code execution: Validate any untrusted data against an allowlist so it is not possible for an attacker to have its supplied code executing. URL manipulation: Add trusted schemes to an allowlist and ensure it does not allow for the injection of a URL like: `data:text/html;,<img/src/onerror=alert(1)>`."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"startFollowing\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":1}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,<img/src/onerror=alert(1)>\".\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-kid.js"},"region":{"startLine":5}},"message":{"text":"Parameter \"result\" is tainted when the callback function is called."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/35EA2234401F8E98A24CC70EEF10B700?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":43}},"message":{"text":"'auth_tan' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":44}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks auth_tan"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":49}},"message":{"text":"assigning to query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":61}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"assigning to action"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":137}},"message":{"text":"assigning to logQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D141CE276A85CA3E1EB9CF21701971E3?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":139}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"ca0175cc35475a872297dbbb0bee7534ed7a9f0f9f028c492aa3e0dbf50dc243"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":139}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":139}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/2570FB8187832AD75561B74334162FBB?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionLesson6b.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"},"region":{"startLine":42}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"c49c238daabe78c2cd45d02a59fddd2073feac159654a3f3f8db24f7fa796707"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/08D6D8253668294C619800C25654DD92?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fadvanced%2FSqlInjectionLesson6a.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"3ab55e79f3f9c11cef978a5351f904e9c21e48d5d4d836f9c958c16d459934e1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a::completed sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":44}},"message":{"text":"'userId' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":45}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a::injectableQuery sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":29}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidation::attack sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":31}},"message":{"text":"'userId' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"},"region":{"startLine":35}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a::injectableQuery sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":33}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidationOnKeywords::attack sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":36}},"message":{"text":"'userId' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":37}},"message":{"text":"calling java.lang.String::toUpperCase"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":37}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":37}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":37}},"message":{"text":"assigning to userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a::injectableQuery sinks userId"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"},"region":{"startLine":54}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/8F0CE4205B56D0377D645A1DF8FA80A4?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":46}}}],"ruleId":"sigma.missing_tls:common_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"3630f0f5f5ac81a59d14dcfe4d6a97cb7d5d5b34416708e681670cff21a5c2e0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":46}},"message":{"text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":46}},"message":{"text":"Configure the URI to use a secure protocol with TLS protections."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/9825BCF4DAC273F8F963BC2EF126BDAA?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsecure%20Encryption%20Algorithm%20in%20Use%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fcryptography%2FHashingAssignment.java)\n\nThis application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"},"region":{"startLine":39}}}],"ruleId":"sigma.weak_hash:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"ed65839e11c45f72cd1a40212bca936b31b5b5fad5b875c3aa6b806a1e07166b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"},"region":{"startLine":39}},"message":{"text":"This application uses a weak algorithm to create a `MessageDigest`, which may lead to collision attacks."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"},"region":{"startLine":39}},"message":{"text":"Use strong algorithms such as `SHA-256` to prevent collision attacks."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/370BE643DD9AAD435AB21B7BE0952F54?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DGeneration%20of%20Error%20Message%20Containing%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":1}}}],"ruleId":"sigma.verbose_error_message:spring_boot_stacktrace_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"eeaf3683aa51317d2890504952ad1a0989d7b0418a7bee6fc9b2fb900e67dc20"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"The Spring Boot main application server is configured to allow stack traces to be displayed in an error page. The stack traces might contain sensitive information and should not be displayed."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":1}},"message":{"text":"Set `server.error.include-stacktrace` to `never` or omit it as the default value is `never`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/EE70AB4B5C5960E5C145494F07BEB993?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":187}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"faae7085811218039e3a4a4aefff8bb4b5c448a91f077d3893df88b3e07ee3ba"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":187}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":187}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/6C824CAFA9C5D294DB2612F043CD1EC0?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Fwebwolf%2Fjwt%2FJWTToken.java)\n\nThe application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}}}],"ruleId":"sigma.jwt_no_claims_validation:jose4j|java","partialFingerprints":{"ruleIdLocationHash/v1":"d2402554bd3fa7d01c1fa025cef78bac5e7ad284879ee0a4a6997781e0dcced1"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"The application invokes `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` to ignore validating JSON Web Token claims. This can be exploited by attackers to reuse an existing JWT signed for other scenarios."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java"},"region":{"startLine":128}},"message":{"text":"Avoid invoking `setSkipAllValidators`, `setSkipDefaultAudienceValidation` or `setSkipAllDefaultValidators` which disable JSON Web Token claims validation."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/B455CB186A6C205626B247DDCC528DAF?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"f83ae4f3c3f21d8c1ce6a0e283b47d5ad137db3fc2ba17c40a0bcbec393fcd01"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::completed sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":43}},"message":{"text":"'name' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":44}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::injectableQueryConfidentiality sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":49}},"message":{"text":"assigning to query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":62}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/FBDFC887003FCB10F9A6D2F6D390F07D?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Verification%20of%20Data%20Authenticity%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTRefreshEndpoint.java)\n\nThe application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":121}}}],"ruleId":"sigma.jwt_untrusted_decode:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"79d845daff39cc7d4cad1bed16202465ffb0ae3520f08c3243d5d9c3b71313cc"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":121}},"message":{"text":"The application uses the `io.jsonwebtoken.JwtParser` package's `parse()`, `parsePlaintextJwt()`, or `parseClaimsJwt()` method to parse a JWT without first verifying the token's signature, allowing an attacker to forge the token claims and perform attacks such as impersonating other users."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"},"region":{"startLine":121}},"message":{"text":"Modify the application to use `parseClaimsJws()` or `parsePlaintextJws()` instead, since these methods will automatically verify the token signature."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/705014FB558096FA319A55338A86CB26?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":45}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"e638f3cd90b241621b853e76befa7de38707d0198a68391744b0941913fc009e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks userid"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'userid' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks userid"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":45}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":45}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/0D6A5A0173F4CD1804D4B5A8FFD5B05B?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson2.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":49}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"975c6eb343ac7ed3178358175f41d601960ee492e2c3e15d42763e22104bcba8"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":40}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2::completed sinks query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":42}},"message":{"text":"'query' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":43}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2::injectableQuery sinks query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":49}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"},"region":{"startLine":49}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/5E647A92F75CCA211D6CD5EBCC5DBF5E?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Flessons%2Fsqlinjection%2Fhtml%2FSqlInjectionAdvanced.html)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/sqlinjection/html/SqlInjectionAdvanced.html"},"region":{"startLine":42}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|html","partialFingerprints":{"ruleIdLocationHash/v1":"86684acf9dfe64ed114cb353a35a913fb35032ce04c8b4ab554334c635bee910"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/BF00614C68BC1B18AA97B7B4DFE4C97E?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson8.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"bcea53508ced8e424747ef5b5c508b887c6587897b7e975554cd0cb11ed96955"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":42}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::completed sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":44}},"message":{"text":"'name' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":45}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9::injectableQueryIntegrity sinks name"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":50}},"message":{"text":"assigning to queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"},"region":{"startLine":64}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8::log sinks queryInjection"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"calling java.lang.String::replace"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":132}},"message":{"text":"assigning to action"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":137}},"message":{"text":"assigning to logQuery"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"},"region":{"startLine":142}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/AFC2C79A90630FDA6E342EF58C83ABBC?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fplugins%2Fbootstrap-slider%2Fjs%2Fbootstrap-slider.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"5c1783dd7d77d6c16823924f20a27c390f908ac83ee238ecdb421faa3543ea11"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}},"message":{"text":"Accessing data with \"this.element\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js"},"region":{"startLine":290}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/12E86D5C1F64AF7E15C0B3CA83C5A4A7?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DInsufficient%20Session%20Expiration%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fjwt%2FJWTVotesEndpoint.java)\n\nThe instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":110}}}],"ruleId":"sigma.jwt_non_expiring_token:io_jsonwebtoken|java","partialFingerprints":{"ruleIdLocationHash/v1":"e435690583f7d1914d7f167b77c4baad92d60f3e4479d81fd47be1a542c1591e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":110}},"message":{"text":"The instance of `JwtBuilder` doesn't set the expiration time when generating the token. Ignoring the expiration time for a JSON web token means it is valid forever. Since the token never expires, an attacker has a longer window to brute-force or exploit the stolen the token."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"},"region":{"startLine":110}},"message":{"text":"Set the expiration time of the token by invoking `JwtBuilder.setExpiration()` or `Claims.setExpiration()`."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/15C6FDFEFA6CB8EBB971D3A3766DDACF?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DBad%20Use%20Of%20Null-like%20Value%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nPerforming an operation that would be invalid on a null or undefined value."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7631}}}],"ruleId":"null_pointer_dereference_exception:constant|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"8aa973c181d2f150bc1a85f8b59c024cc603fe9829b6822de4042a2749ee78a0"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7607}},"message":{"text":"Condition \"!this.completionKeywords\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7609}},"message":{"text":"Assigning: \"completionKeywords\" = \"undefined\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7629}},"message":{"text":"Condition \"!append\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7631}},"message":{"text":"Accessing a property of null-like value \"completionKeywords\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D093097D93272A80549685C867F2898A?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DNULL%20Pointer%20Dereference%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nUsing the return value of a function that can return null or undefined without checking it for null or undefined."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9502}}}],"ruleId":"null_pointer_dereference_exception:return_value|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"fa7ed46780bee40c52c617a5207592d8a6cb15edd683fd3cdb2dcf8cb4e1aea6"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7473}},"message":{"text":"Example 2 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7481}},"message":{"text":"Example 2: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9467}},"message":{"text":"Condition \"token\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9467}},"message":{"text":"Condition \"/^comment|string/.test(type)\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9469}},"message":{"text":"Condition \"type == \"comment\"\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9473}},"message":{"text":"Condition \"dir != 1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9474}},"message":{"text":"Example 3 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9475}},"message":{"text":"Example 3: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9485}},"message":{"text":"Condition \"dir != -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9487}},"message":{"text":"Condition \"token\", taking false branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9489}},"message":{"text":"Condition \"lastRow == -1\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9491}},"message":{"text":"Condition \"!re.test(state)\", taking true branch."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9493}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9497}},"message":{"text":"\"iterator.stepBackward\" returns \"null\" or \"undefined\" (checked 6 out of 7 times)."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9497}},"message":{"text":"Assigning \"token\" to the \"null\" or \"undefined\" return value from \"iterator.stepBackward\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9498}},"message":{"text":"Falling through to end of if statement."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9502}},"message":{"text":"Accessing a property of null-like value \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9833}},"message":{"text":"Example 1 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9834}},"message":{"text":"Example 1: Assigning: \"token\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13413}},"message":{"text":"Example 5: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13431}},"message":{"text":"Example 5 (cont.): Assigning: \"token\" = \"prevToken\".  Both are now equal to the return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":13434}},"message":{"text":"Example 5 (cont.): \"token\" has its value checked in \"token\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14569}},"message":{"text":"Example 4: Assigning: \"prevToken\" = return value from \"iterator.stepBackward()\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":14571}},"message":{"text":"Example 4 (cont.): \"prevToken\" has its value checked in \"prevToken\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/9FF2DAE2CAA1B650873C387265C8080E?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUse%20of%20Hard-coded%20Credentials%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fpasswordreset%2FResetLinkAssignment.java)\n\nA secret, such as a password, cryptographic key, or token is stored in plaintext directly in the source code, in an application's properties, or configuration file. Users with access to the secret may then use the secret to access resources that they otherwise would not have access to."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"},"region":{"startLine":45}}}],"ruleId":"sigma.hardcoded_secret:pattern_low|java","partialFingerprints":{"ruleIdLocationHash/v1":"5799d5f4626f1afedc549b77c83d361fb78fe0c847ea4b557f6ce87769dd8cf6"}},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/8B2F36EE49F290B609AF3FDC0E8575FC?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nCode can never be reached because of a logical contradiction"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":45}}}],"ruleId":"deadcode:logical_contradiction|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"50d8aac322028f3c2b1387b567bbd4f9b32a31e83adf452445f53a0357e8ab2b"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":39}},"message":{"text":"Assigning: \"ACE_NAMESPACE\" = \"\"ace\"\"."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"At condition \"ACE_NAMESPACE\", the truth value of \"ACE_NAMESPACE\" must be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"At condition \"ACE_NAMESPACE\", the type of \"ACE_NAMESPACE\" must be string."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"The condition \"!ACE_NAMESPACE\" cannot be true."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":45}},"message":{"text":"Execution cannot reach the expression \"typeof requirejs !== \"undefined\"\" inside this statement: \"if (!ACE_NAMESPACE && (type...\"."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/E9D47DA65C98834B5BCAF4408E0638E3?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCopy-Paste%20Error%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nA copied piece of code is inconsistent with the original"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7159}}}],"ruleId":"copy_paste_error|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"c3180f3b9f1670b505ae9ad24b70e6413573dfe8ebc73c54ff36549be2e2901e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7156}},"message":{"text":"\"cursor.column\" looks like the original copy."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7159}},"message":{"text":"\"column\" in \"cursor.column\" looks like a copy-paste error."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":7159}},"message":{"text":"Should it say \"row\" instead?"}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/D0210096CE26A3BDFF6ED6B05F267C97?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DUnreachable%252C%20Unused%20or%20Dead%20Code%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Fwebgoat%2Fstatic%2Fjs%2Flibs%2Face.js)\n\nAn expression is useless because it has no side effects and its result is ignored."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9100}}}],"ruleId":"no_effect|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"39edb96212d7d4116305317f6553a03d851a6881fad8b5303fe355419c341e3e"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9100}},"message":{"text":"Reading variable \"i\" and discarding the result. What was this code intended to accomplish?"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/webgoat/static/js/libs/ace.js"},"region":{"startLine":9100}},"message":{"text":"Perhaps this code is incomplete or mistyped in some way."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/BD1EA5C216AB08BD60138B0105CC6D60?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DCleartext%20Transmission%20of%20Sensitive%20Information%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dtarget%2Fclasses%2Fapplication-webgoat.properties)\n\nThe application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":41}}}],"ruleId":"sigma.missing_tls:common_properties|text","partialFingerprints":{"ruleIdLocationHash/v1":"b05c660a5eae341bd04be8c28a1481a93fa0fa5e847b6a44c55613c53d4816d2"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":41}},"message":{"text":"The application is configured to use a URI with an unencrypted protocol such as `ftp`, `http`, `redis`, or `ws`. Sensitive data transmitted over insecure communication channels can be read and modified by attackers."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/application-webgoat.properties"},"region":{"startLine":41}},"message":{"text":"Configure the URI to use a secure protocol with TLS protections."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/5C5B8B32CD05EF508722BF1EEE8672A2?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson10.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":56}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"2d7d3fb3f731aa7cd2637d14aff0bb40d9c72c12b28022968bb3ee6f9d309a11"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10::completed sinks action_string"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":43}},"message":{"text":"'action_string' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":44}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10::injectableQueryAvailability sinks action_string"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":49}},"message":{"text":"assigning to query"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":56}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"},"region":{"startLine":56}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/83D09F41F5BBDB4C8F476A228453A328?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DDOM-Based%20Cross-Site%20Scripting%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fresources%2Flessons%2Fjwt%2Fjs%2Fjwt-jku.js)\n\nUntrusted user-supplied data is inserted into a context that can execute JavaScript."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":1}}}],"ruleId":"xss:dom_xss|javascript","partialFingerprints":{"ruleIdLocationHash/v1":"f686fbf09bce512ac49f24028f00b11c861c661c5c312a5e3c716f3c84777960"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":6}},"message":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":6}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability. HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided. JavaScript code execution: Validate any untrusted data against an allowlist so it is not possible for an attacker to have its supplied code executing. URL manipulation: Add trusted schemes to an allowlist and ensure it does not allow for the injection of a URL like: `data:text/html;,<img/src/onerror=alert(1)>`."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":6}},"message":{"text":"Untrusted user-supplied data is inserted into a context that can execute JavaScript."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"target/classes/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":6}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability. HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided. JavaScript code execution: Validate any untrusted data against an allowlist so it is not possible for an attacker to have its supplied code executing. URL manipulation: Add trusted schemes to an allowlist and ensure it does not allow for the injection of a URL like: `data:text/html;,<img/src/onerror=alert(1)>`."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"follow\". This call registers an event handler (through \"$.ajax({\"type\" : \"POST\", \"url\"...\")."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":1}},"message":{"text":"Calling at a later point \"<anonymous>\". This call uses \"result\" for sensitive computation."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":1}},"message":{"text":"The untrusted data reaches a sink that can either lead to HTML injection, JavaScript code execution, or the manipulation of a URL starting with the \"javascript:\" or \"data:\" schemes. Any of these can lead to a DOM XSS vulnerability.\n* HTML injection: Either escape properly the untrusted data or use a safe API to insert this data to the DOM; direct HTML manipulation as text should be avoided.\n* JavaScript code execution: Validate any untrusted data against a whitelist so it's not possible for an attacker to have its supplied code executing.\n* URL manipulation: Make sure the scheme is whitelisted and doesn't allow for the injection of a URL like: \"data:text/html;,<img/src/onerror=alert(1)>\".\n"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/resources/lessons/jwt/js/jwt-jku.js"},"region":{"startLine":5}},"message":{"text":"Parameter \"result\" is tainted when the callback function is called."}}}]}]}]},{"message":{"text":"[\\[See in Polaris\\]](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/da0ef185-80f3-4e1a-bd3d-6bb7b49af546/projects/25279c5e-8132-43f0-8352-feeb899b9c89/issues/E51C5C3768210103D84BEC55BBBFB546?branchId=f2a3bf81-f906-4bf8-8d72-55605fc747c7&filter=issueType%3Alocalized-name%3DSQL%20Injection%26context%3AtoolType%3Dsast%26issueProperties%3Alocation%3Dsrc%2Fmain%2Fjava%2Forg%2Fowasp%2Fwebgoat%2Flessons%2Fsqlinjection%2Fintroduction%2FSqlInjectionLesson5b.java)\n\nThe software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":97}}}],"ruleId":"sigma.sqli:core_java|java","partialFingerprints":{"ruleIdLocationHash/v1":"5855f904ccc025a7c74f63b7ea14927ef2de18013360861e2ec24edd7ec8224c"},"codeFlows":[{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'login_count' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":61}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":61}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'login_count' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":57}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":57}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'login_count' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":82}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":82}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'login_count' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":90}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":90}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]},{"threadFlows":[{"locations":[{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":37}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::completed sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":39}},"message":{"text":"'login_count' is tainted"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":41}},"message":{"text":"calling org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b::injectableQuery sinks login_count"}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":97}},"message":{"text":"The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}}},{"location":{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"},"region":{"startLine":97}},"message":{"text":"Use one of the following methods: Use a query-preparation API to safely construct the SQL query containing user-supplied values. Only concatenate a user-supplied value into a query if it has been checked against an allow list of safe string values, or if it must be a Boolean or numeric type."}}}]}]}]}]}],"version":"2.1.0"}
